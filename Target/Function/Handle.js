import t from"chalk";var x=async(s,n,c,i,r=!1,p=!1)=>{for(const f of n){const{dir:m}=(await import("path")).parse(f);m.endsWith("/**")||e(`The from path ${t.white(n)} of current asset pair doesnot ends with ${t.white("/**/*(.ext)")}, `,r);const d=m.replace("/**",""),[,w]=c.split(d),h=o(c),a=(await import("path")).extname(i)===""?o(s,i,w?w.slice(1):""):o(s,i);if(!p)try{await(await import("fs/promises")).access((await import("path")).dirname(a),(await import("fs/promises")).constants.R_OK),(await import("fs/promises")).copyFile(h,a)}catch(l){e(String(l).toString(),r)}e(`${p?t.white("[DryRun] "):""}File copied: ${t.white(h)} -> ${t.white(a)}`,r)}};const{default:{resolve:o}}=await import("path"),{default:e}=await import("./Log.js");export{e as Log,x as default,o as resolve};
